services:
  # Redis for queue management
  redis:
    image: redis:7-alpine
    container_name: n8n-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # n8n main application
  n8n:
    image: docker.n8n.io/n8nio/n8n:${N8N_VERSION:-latest}
    container_name: n8n-main
    restart: unless-stopped
    environment:
      # Database
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=shared-postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${N8N_DB_NAME:-n8n}
      - DB_POSTGRESDB_USER=${N8N_DB_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
      
      # n8n settings
      - N8N_PROTOCOL=https
      - N8N_HOST=n8n.flowitup.com
      - N8N_PORT=5678
      - N8N_EDITOR_BASE_URL=https://n8n.flowitup.com
      - WEBHOOK_URL=https://n8n.flowitup.com
      
      # Queue settings
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_HEALTH_CHECK_ACTIVE=true
      - N8N_RUNNERS_ENABLED=true
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true

      # Security
      - N8N_SECURE_COOKIE=true
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_EXPRESS_TRUST_PROXY=true

      # Other settings
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=info
      - GENERIC_TIMEZONE=UTC
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n-network
      - traefik
      - postgres-network
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      
      # HTTPS router
      - "traefik.http.routers.n8n.rule=Host(`n8n.flowitup.com`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.routers.n8n.middlewares=n8n-headers"
      
      # Security headers for Cloudflare
      - "traefik.http.middlewares.n8n-headers.headers.customrequestheaders.CF-Connecting-IP="
      - "traefik.http.middlewares.n8n-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.n8n-headers.headers.customrequestheaders.X-Real-IP="
      
      # Service
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    depends_on:
      redis:
        condition: service_healthy

  # n8n worker (scalable)
  n8n-worker:
    image: docker.n8n.io/n8nio/n8n:${N8N_VERSION:-latest}
    restart: unless-stopped
    command: worker
    environment:
      # Database
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=shared-postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${N8N_DB_NAME:-n8n}
      - DB_POSTGRESDB_USER=${N8N_DB_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${N8N_DB_PASSWORD}
      
      # Queue settings
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - N8N_RUNNERS_ENABLED=true
      
      # Worker settings
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - GENERIC_TIMEZONE=UTC
      - N8N_LOG_LEVEL=info
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n-network
      - postgres-network
    depends_on:
      redis:
        condition: service_healthy
      n8n:
        condition: service_started
    scale: 4

networks:
  traefik:
    external: true
    name: traefik
  postgres-network:
    external: true
    name: postgres-network
  n8n-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  n8n_data:
    driver: local
