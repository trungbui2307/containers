services:
  traefik:
    image: traefik:latest
    restart: unless-stopped
    command:
      # API and Dashboard
      - "--api.dashboard=true"
      - "--api.insecure=true"

      # Docker Provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"

      # Let's Encrypt Configuration using Cloudflare DNS Challenge
      - "--certificatesresolvers.cloudflare.acme.email=${CF_API_EMAIL:-}"
      - "--certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"
      - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
      # Optional: Add a delay to allow DNS propagation (adjust seconds as needed)
      - "--certificatesresolvers.mytlschallenge.acme.dnschallenge.delayBeforeCheck=20"

      # Logging
      - "--log.level=DEBUG"            # Change to INFO in production
      - "--accesslog=true"             # Enable access logs
      - "--accesslog.filepath=/logs/access.log"

    ports:
      - "80:80"
      - "443:443"
      - "8082:8080"

    environment:
      # Provide Cloudflare API Token (use secrets in production!)
      CF_DNS_API_TOKEN: ${CF_API_KEY:-}

    volumes:
      - ./traefik-data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs:/logs

    networks:
      - traefik

networks:
  traefik:
    name: traefik
    external: true

